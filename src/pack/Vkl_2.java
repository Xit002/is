package pack;/*Пакет (package) — это некий контейнер, который используется для того, чтобы изолировать имена классов. 
pack - название пакета */

import javax.swing.*; // библиотека для графического интерфейса
import javax.swing.border.*;//библиотека необходимая для того, чтобы установить отступы 
import java.awt.event.*; /*Подключаем объект event, который содержит свойства, описывающие некое событие.
Каждый раз, когда происходит какое-либо событие, 
объект Event передается соответствующей программе обработки.
Используемым событием в нашей программе являются ACTION события.
*/
import java.awt.*; /*	java. - Все стандартные классы, поставляемые с системой Java, хранятся в пакете java.
java.awt  - подключение пакета awt, содержащего базовые графические функции:GridLayout, BorderLayout и т.д.
"*"-включение всех элементов библиотеки awt */	


public class Vkl_2 extends JPanel  {
	/*Класс Vkl_2, который доступен для любого файла из пакета pack наследует 
	функции элемента JPanel */


	
	private JPanel Panel_1_text, Panel_2_text, Panel_3_button;//панели на которых располагаются поля и кнопки. Панели доступны только для данного класса (private)
	private JButton sost_smet_1;// кнопка Рассчитать которая доступна только для данного класса
	private JLabel jlabel_1,jlabel_2,jlabel_3,jlabel_4; // Панели на которых располагается текст
	public static JTextField name_1,name_2,name_3,name_4,name_5,name_6,name_7,name_8,name_9,name_10, st_1,
	st_2,st_3, st_4, st_5, st_6, st_7, st_8, st_9, st_10, kol_1, kol_2, kol_3, kol_4, kol_5, kol_6, kol_7, 
	kol_8, kol_9, kol_10;
	/* текстовые поля в которые пользователь вводит данные, доступны для любого файла из пакета pack */
		/*static позволяет определять статические методы. Это такие методы, которые являются общими для класса, а не для
	отдельного объекта этого класса. Также они могут работать лишь со статическими полями класса.К статическим методам 
	и переменным можно обращаться через имя класса.*/
	
	
	public Vkl_2() { /*Модификатор доступа public означает, что метод Index()виден и доступен любому классу.
		static означает, что не нужно создавать экземпляр(копию) объекта Index в памяти, чтобы использовать этот метод.
		Vkl_2 - панель, на ней будут все компоненты которые будут отображаться на 2 вкладке .*/
        
        setLayout (new BorderLayout()); /*	Оператор new создает экземпляр указанного класса
	  	Метод setLayout - Вызов менеджера компоновки, который задает определенный порядок панелей в контейнере.
 		Менеджер размещения BorderLayout - тип разбивки контейнера, при котором всё пространство контейнера разбивается 
 		на пять частей. В каждой из этих частей располагается один компонент. 
 		При добавлении компонента на контейнер с BorderLayout разработчик обязательно указывает, 
 		куда именно он хочет поместить компонент.*/

        Panel_1_text = new JPanel();//Панель на которой  располагаются текстовые поля и поля для ввода текста
        Panel_2_text = new JPanel(); //Панель на которой располагаются текстовые поля и поля для ввода текста
        Panel_3_button = new JPanel();//Панель на которой располагается кнопка

		add(Panel_1_text, BorderLayout.NORTH);//Добавление панели panel_1 наверх
		add(Panel_2_text, BorderLayout.CENTER);//Добавление панели panel_2 по центру
		add(Panel_3_button, BorderLayout.SOUTH);//Добавление панели panel_3 снизу

		Panel_1_text.setBorder(new EmptyBorder(10,10,5,10));
		/*установка внутренних отступов(10сверху,10слева,10снизу,10справа) */
		Panel_2_text.setBorder(new EmptyBorder(5,10,15,10));//установка внутренних отступов

		/* установка менеджера компоновки GridLayout. данный менеджер компоновки располагает компоненты в таблицу */
		Panel_1_text.setLayout(new GridLayout(1,1,0,15));//на панели 1 строки,1столбец ("смета расходов....")
		Panel_2_text.setLayout(new GridLayout(11,3,15,5));/* на панеле будет 10 строк, 2 столбца, расстояние между
		 столбцами 15, расстояние между строками 5 */
		Panel_3_button.setLayout(new GridLayout(1,1));//на панели 1 строка,1столбец, будет расположена кнопка

		jlabel_1 = new JLabel("Расчет затрат на материалы", JLabel.CENTER);
		jlabel_2 = new JLabel("Наименование", JLabel.CENTER);
		jlabel_3 = new JLabel("Стоимость", JLabel.CENTER);
		jlabel_4 = new JLabel("Количество", JLabel.CENTER);
		/*Обозначаем что переменные Label_1,Label_2..являются объектом JLabel и указываем какой текст 
		 будет выводиться. JLabel.CENTER - выравнивание по центру,
		JLabel.RIGHT - выравнивание по правому краю */
		
		sost_smet_1 = new JButton("Составить смету"); //В скобках - надпись на кнопке

		name_1 = new JTextField();
		name_1.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_1.setToolTipText("Введите наименование первого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_2 = new JTextField();
		name_2.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_2.setToolTipText("Введите наименование второго материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_3 = new JTextField();
		name_3.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_3.setToolTipText("Введите наименование третьего материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_4 = new JTextField();
		name_4.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_4.setToolTipText("Введите наименование четвертого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_5 = new JTextField();
		name_5.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_5.setToolTipText("Введите наименование пятого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_6 = new JTextField();
		name_6.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_6.setToolTipText("Введите наименование шесторого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_7 = new JTextField();
		name_7.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_7.setToolTipText("Введите наименование седьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_8 = new JTextField();
		name_8.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_8.setToolTipText("Введите наименование восьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		name_9 = new JTextField();
		name_9.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_9.setToolTipText("Введите наименование девятого материала");//всплывающая подсказка при наведении на текстовое поле

		name_10 = new JTextField();
		name_10.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		name_10.setToolTipText("Введите наименование десятого материала");//всплывающая подсказка при наведении на текстовое поле

		st_1 = new JTextField();
		st_1.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_1.setToolTipText("Введите стоимость первого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_2 = new JTextField();
		st_2.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_2.setToolTipText("Введите стоимость второго материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_3 = new JTextField();
		st_3.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_3.setToolTipText("Введите стоимость третьего материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_4 = new JTextField();
		st_4.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_4.setToolTipText("Введите стоимость четвертого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_5 = new JTextField();
		st_5.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_5.setToolTipText("Введите стоимость пятого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_6 = new JTextField();
		st_6.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_6.setToolTipText("Введите стоимость шесторого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_7 = new JTextField();
		st_7.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_7.setToolTipText("Введите стоимость седьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_8 = new JTextField();
		st_8.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_8.setToolTipText("Введите стоимость восьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		st_9 = new JTextField();
		st_9.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_9.setToolTipText("Введите стоимость девятого материала");//всплывающая подсказка при наведении на текстовое поле

		st_10 = new JTextField();
		st_10.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		st_10.setToolTipText("Введите стоимость десятого материала");//всплывающая подсказка при наведении на текстовое поле

		kol_1 = new JTextField();
		kol_1.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_1.setToolTipText("Введите количество первого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_2 = new JTextField();
		kol_2.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_2.setToolTipText("Введите количество второго материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_3 = new JTextField();
		kol_3.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_3.setToolTipText("Введите количество третьего материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_4 = new JTextField();
		kol_4.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_4.setToolTipText("Введите количество четвертого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_5 = new JTextField();
		kol_5.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_5.setToolTipText("Введите количество пятого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_6 = new JTextField();
		kol_6.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_6.setToolTipText("Введите количество шесторого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_7 = new JTextField();
		kol_7.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_7.setToolTipText("Введите количество седьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_8 = new JTextField();
		kol_8.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_8.setToolTipText("Введите количество восьмого материала");//всплывающая подсказка при наведении на текстовое поле
    	
		kol_9 = new JTextField();
		kol_9.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_9.setToolTipText("Введите количество девятого материала");//всплывающая подсказка при наведении на текстовое поле

		kol_10 = new JTextField();
		kol_10.setMargin(new Insets(2, 5, 2, 5));//установка внутренних отступов для текстового поля (2-верхний отступ, 5-левый, 2-нижний, 5-правый)
		kol_10.setToolTipText("Введите количество десятого материала");//всплывающая подсказка при наведении на текстовое поле

		
		
		Panel_3_button.add(sost_smet_1);//Добавление кнопки на панель panel_3
		
		//Добавление компонентов JLabel, JTextField, JComboBox, JCheckBox на панели panel_1 и panel_2
		Panel_1_text.add(jlabel_1);

		Panel_2_text.add(jlabel_2);
		Panel_2_text.add(jlabel_3);
		Panel_2_text.add(jlabel_4);
		Panel_2_text.add(name_1);
		Panel_2_text.add(st_1);
		Panel_2_text.add(kol_1);
		
		Panel_2_text.add(name_1);
		Panel_2_text.add(st_1);
		Panel_2_text.add(kol_1);
		
		Panel_2_text.add(name_2);
		Panel_2_text.add(st_2);
		Panel_2_text.add(kol_2);
		
		Panel_2_text.add(name_3);
		Panel_2_text.add(st_3);
		Panel_2_text.add(kol_3);
		
		Panel_2_text.add(name_4);
		Panel_2_text.add(st_4);
		Panel_2_text.add(kol_4);
		
		Panel_2_text.add(name_5);
		Panel_2_text.add(st_5);
		Panel_2_text.add(kol_5);
		
		Panel_2_text.add(name_6);
		Panel_2_text.add(st_6);
		Panel_2_text.add(kol_6);
		
		Panel_2_text.add(name_7);
		Panel_2_text.add(st_7);
		Panel_2_text.add(kol_7);
		
		Panel_2_text.add(name_8);
		Panel_2_text.add(st_8);
		Panel_2_text.add(kol_8);
		
		Panel_2_text.add(name_9);
		Panel_2_text.add(st_9);
		Panel_2_text.add(kol_9);
		
		Panel_2_text.add(name_10);
		Panel_2_text.add(st_10);
		Panel_2_text.add(kol_10);
		//Добавление компонентов JLabel, JTextField, JComboBox, JCheckBox на панели panel_1 и panel_2

		
		sost_smet_1.addActionListener(new ActionListener(){    //добавляем слушателя события для кнопки 
			/*      "."  - указывает к какой переменной (кнопке) следует применить слушателя.
		 	addActionListener - добавление слушателя ActionListener к кнопке
		  	new - Оператор new создает экземпляр указанного класса 
		  	(Для того чтобы кнопки стали функциональными, каждой из них необходимо присвоить обработчик событий, 
		  	который будет отвечать за реагирование на события. 
		  	В нашем случае требуется идентифицировать событие нажатия кнопки – путем щелчка мышью. 
		  	Поэтому будет использоваться интерфейс "ActionListener", 
		  	предназначенный для обработки событий "ActionEvent".
		  	тело интерфейса указывается ниже после фигурной скобки "{"
    	    */
    	    public void actionPerformed(ActionEvent e) 
    	    /* 	ActionListener" имеет метод "actionPerformed" объекта "ActionEvent", 
	      	который реализуется путем простого вызова обработчика событий ActionPerformed.
	      	Ключевое слово public означает, что метод actionPerformed() доступен для любого другого класса Java
	      	Ключевое слово void означает, что метод main() не возвращает данных в программу, которая его вызвала. 
	      	*/             
    	    {   int ss_1=0, ss_2=0, ss_3=0, ss_4=0, ss_5=0, ss_6=0, ss_7=0, ss_8=0, ss_9=0, ss_10=0;
    	        if (name_1.getText().trim().length() > 0) { //если переменная не пуста
    	        	if ((Index.isValidInput(st_1, "стоимость первого материала"))&&
    	        		(Index.isValidInput(kol_1, "количество первого материала"))){
    	        			ss_1=1;
/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
    	        	}
    	        } else {ss_1=1;}
    	        if (ss_1==1){
	    	        if (name_2.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_2, "стоимость второго материала"))&&
	    	        		(Index.isValidInput(kol_2, "количество второго материала"))){
	    	        			ss_2=1;
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	    	        	}
	    	        } else {ss_2=1;}
    	        }
    	        if (ss_1*ss_2==1){
	    	        if (name_3.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_3, "стоимость третьего материала"))&&
	    	        		(Index.isValidInput(kol_3, "количество третьего материала"))){
	    	        			ss_3=1;
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	    	        	}
	    	        } else {ss_3=1;}
    	        }
    	        if (ss_1*ss_2*ss_3==1){
	    	        if (name_4.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_4, "стоимость четвертого материала"))&&
	    	        		(Index.isValidInput(kol_4, "количество четвертого материала"))){
	    	        			ss_4=1;
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	    	        	}
	    	        } else {ss_4=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4==1){
	    	        if (name_5.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_5, "стоимость пятого материала"))&&
	    	        		(Index.isValidInput(kol_5, "количество пятого материала"))){
	    	        			ss_5=1;
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	   	        			
	    	        	}
	    	        } else {ss_5=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4*ss_5==1){
	    	        if (name_6.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_6, "стоимость шестого материала"))&&
	    	        		(Index.isValidInput(kol_6, "количество шестого материала"))){
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	    	        			ss_6=1;
	    	        	}
	    	        } else {ss_6=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4*ss_5*ss_6==1){
	    	        if (name_7.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_7, "стоимость седьмого материала"))&&
	    	        		(Index.isValidInput(kol_7, "количество седьмого материала"))){
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	
	    	        			ss_7=1;
	    	        	}
	    	        } else {ss_7=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4*ss_5*ss_6*ss_7==1){
	    	        if (name_8.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_8, "стоимость восьмого материала"))&&
	    	        		(Index.isValidInput(kol_8, "количество восьмого материала"))){
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	
	    	        			ss_8=1;
	    	        	}
	    	        } else {ss_8=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4*ss_5*ss_6*ss_7*ss_8==1){
	    	        if (name_9.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_9, "стоимость девятого материала"))&&
	    	        		(Index.isValidInput(kol_9, "количество девятого материала"))){
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	
	    	        			ss_9=1;
	    	        	}
	    	        } else {ss_9=1;}
    	        }
    	        if (ss_1*ss_2*ss_3*ss_4*ss_5*ss_6*ss_7*ss_8*ss_9==1){
	    	        if (name_10.getText().trim().length() > 0) { //если переменная не пуста
	    	        	if ((Index.isValidInput(st_10, "стоимость десятого материала"))&&
	    	        		(Index.isValidInput(kol_10, "количество десятого материала"))){
	/*Проверка правильности введенных данных. Функция isValidInput расположена в файле Index */
	
	    	        			ss_10=1;
	    	        	}
	    	        } else {ss_10=1;}
    	        }
    	    
    	    	if (ss_1*ss_2*ss_3*ss_4*ss_5*ss_6*ss_7*ss_8*ss_9*ss_10==1){
    	    		
    	    		if (Vkl_1.calc_int==1){	/*если флажок Рассчитать мат.затраты включен, то выпоняем функцию 
    	    		которая считывает данные из первой вкладки*/
	    				Vkl_1.izd_int=Vkl_1.izd.getSelectedIndex();
    	    			Sost_smet.vkl_1();
    	    		} 
    	    		Sost_smet.vkl_2();//считываем данные из второй вкладки
       				Output_smet.main(null);  //Открываем окно с расчетами
       				Index.frame.setVisible(false); //Данное окно становится невидимым
    	      		
		         }
    	    }    	    	                                                        
    	   });

	
	
	
	}
	
	
	
	
	
}
